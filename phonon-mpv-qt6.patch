diff -up phonon-mpv-master/CMakeLists.txt.1~ phonon-mpv-master/CMakeLists.txt
--- phonon-mpv-master/CMakeLists.txt.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/CMakeLists.txt	2023-11-20 19:31:14.071255387 +0100
@@ -20,18 +20,18 @@ include(KDECompilerSettings)
 include(ECMSetupVersion)
 
 # Phonon
-find_package(Phonon4Qt5 4.10.60 NO_MODULE)
-set_package_properties(Phonon4Qt5 PROPERTIES
+find_package(Phonon4Qt${QT_MAJOR_VERSION} 4.10.60 NO_MODULE)
+set_package_properties(Phonon4Qt${QT_MAJOR_VERSION} PROPERTIES
     TYPE REQUIRED
     DESCRIPTION "Phonon core library"
     URL "https://api.kde.org/phonon/html/index.html")
 
-find_package(Phonon4Qt5Experimental 4.10.60 NO_MODULE)
-set_package_properties(Phonon4Qt5Experimental PROPERTIES
+find_package(Phonon4Qt${QT_MAJOR_VERSION}Experimental 4.10.60 NO_MODULE)
+set_package_properties(Phonon4Qt${QT_MAJOR_VERSION}Experimental PROPERTIES
     TYPE OPTIONAL
     DESCRIPTION "Phonon experimental library"
     URL "https://api.kde.org/phonon/html/index.html")
-if(Phonon4Qt5Experimental_FOUND)
+if(Phonon4Qt${QT_MAJOR_VERSION}Experimental_FOUND)
     set(PHONON_EXPERIMENTAL TRUE)
 endif()
 
@@ -39,12 +39,16 @@ endif()
 find_package(PkgConfig)
 pkg_check_modules(MPV REQUIRED mpv>=1.101.0)
 
-find_package(Qt5X11Extras)
-find_package(Qt5Gui)
+find_package(Qt${QT_MAJOR_VERSION} REQUIRED COMPONENTS Core Gui)
+if(QT_MAJOR_VERSION STREQUAL "5")
+    find_package(Qt${QT_MAJOR_VERSION} REQUIRED COMPONENTS X11Extras)
+else()
+    find_package(Qt${QT_MAJOR_VERSION} REQUIRED COMPONENTS OpenGLWidgets)
+endif()
 
 add_definitions(-DPHONON_MPV_VERSION="${PROJECT_VERSION}")
 include_directories(${MPV_INCLUDE_DIR})
-ecm_setup_version(PROJECT VARIABLE_PREFIX PHONON_VLC)
+ecm_setup_version(PROJECT VARIABLE_PREFIX PHONON_MPV)
 
 add_subdirectory(src)
 
diff -up phonon-mpv-master/src/CMakeLists.txt.1~ phonon-mpv-master/src/CMakeLists.txt
--- phonon-mpv-master/src/CMakeLists.txt.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/CMakeLists.txt	2023-11-20 19:31:14.071255387 +0100
@@ -22,23 +22,21 @@ set(phonon_mpv_SRCS
 add_library(phonon_mpv MODULE ${phonon_mpv_SRCS})
 
 target_link_libraries(phonon_mpv
-    Phonon::phonon4qt5
+    Phonon::phonon4qt${QT_MAJOR_VERSION}
     ${MPV_LIBRARIES}
 )
 
-if(Qt5Gui_FOUND)
-    add_definitions(-DWAYLAND_SUPPORT)
+add_definitions(-DWAYLAND_SUPPORT)
+add_definitions(-DX11_SUPPORT)
+if(QT_MAJOR_VERSION STREQUAL "5")
     include_directories(${Qt5Gui_PRIVATE_INCLUDE_DIRS})
-    target_link_libraries(phonon_mpv Qt5::Gui)
-endif()
-
-if(Qt5X11Extras_FOUND)
-    add_definitions(-DX11_SUPPORT)
-    target_link_libraries(phonon_mpv Qt5::X11Extras)
+    target_link_libraries(phonon_mpv Qt::Gui Qt::X11Extras)
+else()
+    target_link_libraries(phonon_mpv Qt::Core Qt::Gui Qt::OpenGLWidgets)
 endif()
 
 if(PHONON_EXPERIMENTAL)
-    target_link_libraries(phonon_mpv Phonon::phonon4qt5experimental)
+    target_link_libraries(phonon_mpv Phonon::phonon4qt${QT_MAJOR_VERSION}experimental)
 endif()
 
 install(TARGETS phonon_mpv DESTINATION ${PHONON_BACKEND_DIR})
diff -up phonon-mpv-master/src/backend.cpp.1~ phonon-mpv-master/src/backend.cpp
--- phonon-mpv-master/src/backend.cpp.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/backend.cpp	2023-11-20 19:31:14.070255378 +0100
@@ -26,7 +26,6 @@
 #include <QDir>
 #include <QResizeEvent>
 #include <QIcon>
-#include <QLatin1Literal>
 #include <QMessageBox>
 #include <QtPlugin>
 #include <QSettings>
diff -up phonon-mpv-master/src/mediacontroller.cpp.1~ phonon-mpv-master/src/mediacontroller.cpp
--- phonon-mpv-master/src/mediacontroller.cpp.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/mediacontroller.cpp	2023-11-20 19:31:14.070255378 +0100
@@ -276,7 +276,7 @@ void MediaController::refreshAudioChanne
             if(i == currentChannelId) {
                 const QList<AudioChannelDescription> list{GlobalAudioChannels::instance()->listFor(this)};
                 foreach(const AudioChannelDescription &descriptor, list) {
-                    if(descriptor.name() == id)
+                    if(descriptor.name() == QString::number(id))
                         m_currentAudioChannel = descriptor;
                 }
             }
diff -up phonon-mpv-master/src/mediaobject.cpp.1~ phonon-mpv-master/src/mediaobject.cpp
--- phonon-mpv-master/src/mediaobject.cpp.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/mediaobject.cpp	2023-11-20 19:31:14.070255378 +0100
@@ -26,6 +26,11 @@
 #include <QStringBuilder>
 #include <QUrl>
 
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#include <QLatin1StringView>
+#define QLatin1Literal QLatin1StringView
+#endif
+
 #define MPV_ENABLE_DEPRECATED 0
 #include <mpv/client.h>
 
diff -up phonon-mpv-master/src/utils/debug.cpp.1~ phonon-mpv-master/src/utils/debug.cpp
--- phonon-mpv-master/src/utils/debug.cpp.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/utils/debug.cpp	2023-11-20 19:31:14.070255378 +0100
@@ -21,8 +21,8 @@
 #include "debug.h"
 #include "debug_p.h"
 
-#include <QtCore/QMutex>
-#include <QtCore/QObject>
+#include <QRecursiveMutex>
+#include <QObject>
 #include <QApplication>
 
 #ifdef Q_OS_UNIX
@@ -36,7 +36,7 @@
 
 #define DEBUG_INDENT_OBJECTNAME QLatin1String("Debug_Indent_object")
 
-QMutex Debug::mutex( QMutex::Recursive );
+QRecursiveMutex Debug::mutex;
 
 using namespace Debug;
 
@@ -218,5 +218,5 @@ Block::~Block()
 void Debug::stamp()
 {
     static int n = 0;
-    debug() << "| Stamp: " << ++n << endl;
+    debug() << "| Stamp: " << ++n << Qt::endl;
 }
diff -up phonon-mpv-master/src/utils/debug.h.1~ phonon-mpv-master/src/utils/debug.h
--- phonon-mpv-master/src/utils/debug.h.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/utils/debug.h	2023-11-20 19:31:14.070255378 +0100
@@ -25,10 +25,10 @@
 #undef QT_NO_DEBUG_OUTPUT
 #undef KDE_NO_DEBUG_OUTPUT
 
-#include <QtCore/QDebug>
-#include <QtCore/QMutex>
+#include <QDebug>
+#include <QRecursiveMutex>
 
-# include <QtCore/QElapsedTimer>
+#include <QElapsedTimer>
 
 /**
  * @namespace Debug
@@ -61,7 +61,7 @@
  */
 namespace Debug
 {
-    extern QMutex mutex;
+    extern QRecursiveMutex mutex;
 
     enum DebugLevel {
         DEBUG_INFO  = 0,
diff -up phonon-mpv-master/src/utils/debug_p.h.1~ phonon-mpv-master/src/utils/debug_p.h
--- phonon-mpv-master/src/utils/debug_p.h.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/utils/debug_p.h	2023-11-20 19:31:14.070255378 +0100
@@ -22,6 +22,7 @@
 #include "debug.h"
 
 #include <QtCore/QString>
+#include <QIODevice>
 
 class IndentPrivate
     : public QObject
diff -up phonon-mpv-master/src/video/videowidget.cpp.1~ phonon-mpv-master/src/video/videowidget.cpp
--- phonon-mpv-master/src/video/videowidget.cpp.1~	2023-01-30 17:08:25.000000000 +0100
+++ phonon-mpv-master/src/video/videowidget.cpp	2023-11-20 19:35:31.737673259 +0100
@@ -25,13 +25,20 @@
 #include <QtGui/QPaintEvent>
 #include <QDir>
 #include <QOpenGLContext>
-#ifdef X11_SUPPORT
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0) && defined(X11_SUPPORT)
 #include <QtX11Extras/QX11Info>
 #endif
 #ifdef WAYLAND_SUPPORT
 #include <QGuiApplication>
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0) && defined(X11_SUPPORT)
 #include <qpa/qplatformnativeinterface.h>
 #endif
+#endif
+
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+#include <QLatin1StringView>
+#define QLatin1Literal QLatin1StringView
+#endif
 
 #define MPV_ENABLE_DEPRECATED 0
 #include <mpv/render_gl.h>
@@ -57,16 +64,30 @@ void VideoWidget::initializeGL() {
     mpv_opengl_init_params gl_init_params{get_proc_address, QOpenGLContext::currentContext()};
     mpv_render_param display{MPV_RENDER_PARAM_INVALID, nullptr};
 #ifdef X11_SUPPORT
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
     if(QX11Info::isPlatformX11()) {
         display.type = MPV_RENDER_PARAM_X11_DISPLAY;
         display.data = QX11Info::display();
     }
+#else
+    if(QNativeInterface::QX11Application const *n = qApp->nativeInterface<QNativeInterface::QX11Application>()) {
+        display.type = MPV_RENDER_PARAM_X11_DISPLAY;
+        display.data = n->display();
+    }
+#endif
 #endif
 #ifdef WAYLAND_SUPPORT
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
     if(!display.data) {
         display.type = MPV_RENDER_PARAM_WL_DISPLAY;
         display.data = (struct wl_display*)QGuiApplication::platformNativeInterface()->nativeResourceForWindow("display", NULL);
     }
+#else
+    if(QNativeInterface::QWaylandApplication const *n = qApp->nativeInterface<QNativeInterface::QWaylandApplication>()) {
+        display.type = MPV_RENDER_PARAM_X11_DISPLAY;
+        display.data = n->display();
+    }
+#endif
 #endif
     mpv_render_param params[]{
         {MPV_RENDER_PARAM_API_TYPE, const_cast<char *>(MPV_RENDER_API_TYPE_OPENGL)},
